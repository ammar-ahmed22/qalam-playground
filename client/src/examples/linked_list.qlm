// Helper function to print lists
kaam print_list(head) {
  rakho curr = head;
  rakho out = "";
  jabtak(curr) {
    out += str(curr.val);
    out += " -> ";
    curr = curr.next;
  }
  out += "khali";
  bolo(out);
}

// Using classes for our ListNode's
jamat ListNode {
  banao(val, next) {
    yeh.val = val;
    yeh.next = next;
  }
}

// Creating a list
rakho list = ListNode(1, ListNode(2, ListNode(3, ListNode(4, khali))));
bolo("Basic list:");
print_list(list);
bolo("");

// Creating a list from an array
kaam list_from_arr(arr) {
  rakho list = ListNode(arr[0], khali);
  rakho curr = list;
  har(rakho i = 1; i < len(arr); i++) {
    curr.next = ListNode(arr[i], khali);
    curr = curr.next;
  }
  wapis list;
}

rakho complex_list = list_from_arr([1, "Ammar", 2.3, sach, jhoot]);
bolo("Complex list:");
print_list(complex_list);
bolo("");

// Reversing a linked list
rakho list = list_from_arr([1, 2, 3, 4, 5]);

kaam reverse_list(head) {
  rakho prev;
  rakho curr = head;
  rakho next;
  jabtak(curr) {
    next = curr.next;
    curr.next = prev;
    prev = curr;
    curr = next;
  }
  wapis prev;
}

bolo("Original list:");
print_list(list);
bolo("Reversed list:");
print_list(reverse_list(list));
